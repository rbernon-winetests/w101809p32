name: build
on:
  push:
  schedule:
    - cron: '30 3 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rbernon/winehq:latest
      options: --user root
    strategy:
      matrix:
        arch: [win32, win64]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Environ
        run: |
          echo "CONFIGURE_ARGS_win64=--enable-win64 --enable-win64 --enable-archs=i386,x86_64" >> $GITHUB_ENV
          echo "CONFIGURE_ARGS_win32=" >> $GITHUB_ENV
          echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV
          echo "CCACHE_COMPILERCHECK=none" >> $GITHUB_ENV
          echo "CCACHE_BASEDIR=$PWD/wine" >> $GITHUB_ENV
          echo "CCACHE_DIR=$PWD/.ccache" >> $GITHUB_ENV
          echo "CCACHE_COMPRESSLEVEL=10" >> $GITHUB_ENV
          echo "CCACHE_COMPRESS=1" >> $GITHUB_ENV
          echo "MAKE=make -s -j8" >> $GITHUB_ENV

      - name: Cache
        uses: actions/cache@v3
        with:
          path: .ccache
          key:
            cache-${{ matrix.arch }}-${{ github.run_id }}
          restore-keys: |
            cache-${{ matrix.arch }}

      - name: Build
        run: |
          git clone https://gitlab.winehq.org/wine/wine.git
          env -C wine tools/make_requests
          env -C wine tools/make_makefiles
          env -C wine autoreconf -f

          rm build -rf; mkdir -p build
          env -C build ../wine/configure -q -C CROSSDEBUG=split --with-mingw $CONFIGURE_ARGS_${{ matrix.arch }}
          $MAKE -C build

          $MAKE -C build DESTDIR=$PWD install-lib install-test
          find usr -type f -iname '*.debug' -delete
          ccache --recompress 10

          mkdir -p usr/local/share/wine/gecko
          GECKO_VER="$(grep GECKO_VER: wine/tools/gitlab/test.yml | awk '{print $2}')"
          curl -o usr/local/share/wine/gecko/wine-gecko-$GECKO_VER-x86.msi    https://dl.winehq.org/wine/wine-gecko/$GECKO_VER/wine-gecko-$GECKO_VER-x86.msi
          curl -o usr/local/share/wine/gecko/wine-gecko-$GECKO_VER-x86_64.msi https://dl.winehq.org/wine/wine-gecko/$GECKO_VER/wine-gecko-$GECKO_VER-x86_64.msi

          mkdir -p usr/local/share/wine/mono
          MONO_VER="$(grep MONO_VER: wine/tools/gitlab/test.yml | awk '{print $2}')"
          curl -o usr/local/share/wine/mono/wine-mono-$MONO_VER-x86.msi       https://dl.winehq.org/wine/wine-mono/$MONO_VER/wine-mono-$MONO_VER-x86.msi

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.arch }}
          path: usr

  test:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: rbernon/winehq:latest
      options: --user root
    strategy:
      matrix:
        arch: [win32, win64]
        wm: [nulldrv, desktop, fvwm, openbox, kwin, mutter, wayland]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: build-${{ matrix.arch }}

      - name: Test
        run: |
          chmod +x local/bin/*
          useradd github && mkdir -p /home/github /home/github/Documents /home/github/Desktop && chown github:github -R /home/github
          su - github $PWD/run-tests $PWD ${{ matrix.arch }} ${{ matrix.wm }} ${{ github.event_name }}

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: winetest-${{ matrix.wm }}-${{ matrix.arch }}.report
          path: /home/github/*.report

  clean:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Cleanup
        uses: rbernon/workflow-cleanup@main
        with:
          workflow: all
