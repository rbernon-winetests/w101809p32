#!/bin/bash

set -Eeux

ARCH="$1"
COMMIT="$2"

case $ARCH in
    win64) CC="clang -target x86_64-linux"
           PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
           CONFIGURE_ARGS="--enable-win64 --enable-archs=i386,x86_64"
           ;;
    win32) CC="clang -target i686-linux"
           PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig
           CONFIGURE_ARGS=""
           ;;
esac

export MAKE="make -s -j8"
export PATH="/usr/lib/ccache:$PATH"

export CCACHE_BASEDIR="$PWD/wine"
export CCACHE_COMPILERCHECK="none"
export CCACHE_COMPRESS="1"
export CCACHE_COMPRESSLEVEL="10"
export CCACHE_DIR="$PWD/.ccache"
export CCACHE_MAXSIZE=1G

[ ! -d "wine" ] && git clone https://gitlab.winehq.org/wine/wine.git || (git -C wine reset --hard && git -C wine pull origin master)
git -C wine checkout "$COMMIT"
git -C wine apply $PWD/patches/*.patch

rm build -rf; mkdir -p build
env -C build ../wine/configure -q --with-mingw=clang CC="$CC" PKG_CONFIG_PATH="$PKG_CONFIG_PATH" $CONFIGURE_ARGS
$MAKE -C build

$MAKE -C build DESTDIR=$PWD install-lib install-test
find usr -type f -iname '*.debug' -delete
ccache --recompress 10

mkdir -p usr/local/share/wine/gecko
GECKO_VER="$(grep GECKO_VER: wine/tools/gitlab/test.yml | awk '{print $2}')"
curl -o usr/local/share/wine/gecko/wine-gecko-$GECKO_VER-x86.msi    https://dl.winehq.org/wine/wine-gecko/$GECKO_VER/wine-gecko-$GECKO_VER-x86.msi
curl -o usr/local/share/wine/gecko/wine-gecko-$GECKO_VER-x86_64.msi https://dl.winehq.org/wine/wine-gecko/$GECKO_VER/wine-gecko-$GECKO_VER-x86_64.msi

mkdir -p usr/local/share/wine/mono
MONO_VER="$(grep MONO_VER: wine/tools/gitlab/test.yml | awk '{print $2}')"
curl -o usr/local/share/wine/mono/wine-mono-$MONO_VER-x86.msi       https://dl.winehq.org/wine/wine-mono/$MONO_VER/wine-mono-$MONO_VER-x86.msi

cp build/config.log usr/local/share/wine/
